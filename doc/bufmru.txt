*bufmru.txt* Order buffers in Most Recently Used order
--------------------------------------------------------------------
                                                                   ~
                 ____         __ __  __ ____  _   _                ~
                | __ ) _   _ / _|  \/  |  _ \| | | |               ~
                |  _ \| | | | |_| |\/| | |_) | | | |               ~
                | |_) | |_| |  _| |  | |  _ <| |_| |               ~
                |____/ \__,_|_| |_|  |_|_| \_\\___/                ~
                                                                   ~
                                                                   ~
====================================================================
CONTENTS                                            *BufMRUContents*

    1. Usage ................ |BufMRUUsage|
    2. Mappings ............. |BufMRUMappings|
    3. License .............. |BufMRULicense|
    4. Commands ............. |BufMRUCommands|
    5. Functions ............ |BufMRUFunctions|
    6. Lightline component .. |BufMRULightline|

====================================================================
Section 1: Usage                                       *BufMRUUsage*

This plugin records the last used buffers, and let you list the
buffers, and navigate between the buffers

====================================================================
Section 2: Mappings                                 *BufMRUMappings*

The mapping is left to the user to do in the .vimrc. Recommended
mapping is to use Alt-B for next buffer in list and Alt-Shift-B for
previous buffer in list.

	map <A-B>  :BufMRUPrev<CR>
	map <A-b>  :BufMRUNext<CR>
	map <Esc>B :BufMRUPrev<CR>
	map <Esc>b :BufMRUNext<CR>

====================================================================
Section 3: License                                   *BufMRULicense*

Copyright (c) 2015 Mildred Ki'Lya

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation files
(the "Software"), to deal in the Software without restriction,
including without limitation the rights to use, copy, modify, merge,
publish, distribute, sublicense, and/or sell copies of the Software,
and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

====================================================================
Section 4: Commands                                 *BufMRUCommands*

  							   *:BufMRU*
:BufMRU
	List the buffers in MRU order.

     						       *:BufMRUNext*
:BufMRUNext
	Switch to the next buffer in MRU order.

     						       *:BufMRUPrev*
:BufMRUPrev
	Switch to the previous buffer in MRU order.


====================================================================
Section 5: Functions                               *BufMRUFunctions*

                     				      *BufMRUList()*
:BufMRUList()
	Return the list of buffers tracked by BufMRU sorted in Most
	Recently Used order. Each buffer is represented by its
	identifier.

     						      *BufMRUTime()*
:BufMRUTime(n)
	Return the time the buffer n was last used in reltime()
	format.


====================================================================
Section 6: Lightline component                     *BufMRULightline*

A ligneline component can be installed by adding it to the
|g:lightline| global variable. A recommended configuration is:

                                        *bufmru#lightline#buffers()*
                                          *bufmru#lightline#close()*
	let g:lightline = {
	\ 'tabline': {
	\   'left': [ [ 'mrubuffers' ] ],
	\   'right': [ [ 'bufferclose', 'tabnum' ] ]
	\ },
	\ 'component_expand': {
	\   'mrubuffers': 'bufmru#lightline#buffers',
	\   'bufferclose': 'bufmru#lightline#close',
	\   'tabnum': 'bufmru#lightline#tabnum',
	\ },
	\ 'component_type': {
	\   'buffers':       'tabsel',
	\   'mrubuffers':    'tabsel',
	\ },
	\ 'component_raw': {
	\   'mrubuffers':     1,
	\   'bufferclose':    1,
	\   'tabnum':         1,
	\ },
	\ 'enable': {
	\   'statusline': 1,
	\   'tabline': 1
	\ }
	\ ...
	\ }

In order to have correct ellipsis working, you can configure the
number of characters that the component should reserve on the
tabline. The component will then take the window width minus this
reserve. You can count the space needed by other components on your
tabline and set the reserve size accordingly.

                                         *g:bufmru_lightline_reseve*
	g:bufmru_lightline_reseve = 5

You can also configure the ellipsis format:

                                       *g:bufmru_lightline_ellipsis*
	g:bufmru_lightline_ellipsis = 'â€¦'

In case the character is a unicode character that takes less columns
than the number of unicode bytes, you might want to specify its size
manually:

                                   *g:bufmru_lightline_ellipsis_len*
	g:bufmru_lightline_ellipsis_len = 1

You can also tell the separator length. Set this to 0 if you have no
separators for example:

                                        *g:bufmru_lightline_sep_len*
	g:bufmru_lightline_sep_len = 1


--------------------------------------------------------------------
 vim:fo=tcq2:isk=!-~,^*,^\|,^\":ts=8:ft=help:norl:tw=68
